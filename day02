变量
  变量命名规则
  1)字母,数字,下划线,不能以数字作为第一个字符
  2)区分大小写
  
编写习惯 
  简短,多词间用下划线   py_str
  变量用名词,函数用名词+动词 phone  update_phone
  驼峰式写法       MyClass
  
赋值
  赋值操作自右向左执行
  n++  先运算再赋值| ++n 先赋值再运算  python不支持
  
四则运算
  / 除 // 求商
  divmod(5,3) 得到商和余数
  2 ** 3   // 2的3次方
  
比较运算返回值
  是true 或 false
  10 < 20 > 15   //true 相当于 10 < 20 and 20 > 15
  
python的数据类型
数字类型
  1,布尔数也是整数型
    true 1 false 0
    是可以计算的 true+1 false*2
  2,浮点数float
  3,复数
  
整数的表示方式
  1,10进制数没有前缀
  2,8进制数前缀0o                  //计算方法：参考7进制就是按周计算
  >>> import os
  >>> os.chmod('login.py',0o755)
  3,16进制0x开头
  4,2进制以0b或0B开头
  
字符串类型
  引号中间的字符,单,双引号没有区别
  "tom's pet is a cat"
  'tom\'s pet is a cat'
  
  2字符串中包含变量,使用%s占位
  'hello %s' % 'bob'
  '%s is %s years old' % ('tom',22)
  
  python支持三引号 （三个连续的单双引号），可以保存用户的输入格式
  words="hello\ngreet\nwelcome"
  print(words)
  
  danci='''hello
  greet
  welcome'''
  print(danci)          
  以上俩中方法输出相同
  
  py_str='python'
  len() 取字符串长度
  py_str[0] 取出索引 下标为0的字符
  py_str[len(py_str)-1] 取最后一位
  py_str[-1] 自右向左取
  py_str[2:4]   切片 起始下标字符包含,结束下标字符不包含
  py_str[2:]      结束下标不写表示到结尾
  py_str[:2]
  py_str[::2]     第二个:后是步长值
  py_str[1::2]    更改起始值
  py_str[::-1]    自右向左取
  
  't' in py_str
  py_str + str(100)    //py_str + '100'
  '*' * 50     重赋50遍 *
  
列表
  相当于一个数组,可以将各种对象存入其中
  alist = ['tom','jerry',10,20,[1,2,3]]
  len(alist)
  alist[2:4]
  alist.(tabx2)   显示属性方法
  alist.append(200)
  alist.insert()                    //yiyibooks.cn  -> python 352 文档 >> 文档库
  alist[-1]=100 最后一项重新赋值
  alist + [5]
  alist * 3
  
元组
  可当作不可改变的列表
  atuple = (1,2,3,4)
  可以切片,取字符,拼接,索引下标
  不可更改

字典
  key-value对格式的数据
  adict = {'name':'tome','age':20}
  20 in adict          //返回false 判断key
  adict['age']             //字典没有顺序,只有键值对 通过key找value
  adict['age'] = 22           //更新value
  adict['email'] = 'tom@qq.com'     //添加新值
  
数据类型分类
1,存储
  标量:数字,字符串
  容器:字典,元组,列表
  
2,更新   // 内存的存储类型
  不可变:字符串 数字 元组
  >>> id() 查看变量指向内存地址
  
3,访问
  直接:数字
  顺序:字符串,列表,元组
  映射:字典
  
判断语句
  表达式非0值,非空 条件为真即为true
  >>> if ' ': print('yes')   空格字符串非空 输出
  >>> if [False]: print('yes') 非空列表 输出
  >>> if 'b' in 'abc' : print('yes') 为真 输出
  >>> if 3 > 10 :
      ...     print ('yes')
      ... else:
      ...     print ('no')
      ... 
      no
  IndentationError: unexpected indent      // 缩进错误
  
  import getpass        //导入模块
  user_name=input('username')
  password=getpass.getpass('password')   //调用模块功能
  if user_name=='bob' and password=='123456':      //判断 ==  字符串用''
      print('Login successful')
  else:
      print('Login inorect')
  
  猜数字
  import random
num=random.randint(1,10)
while 1:
    result = int(input('guess a number:'))
    if result > num:
        print('big')
    elif result < num:
        print('small')
    else:
        print('ok')
        print('number is:',num)
        exit()                  //break
        
  三元表达式
    >>> a = 10
    >>> b = 20
    >>> if a <= b:
    ...     smaller=a
    ... else:
    ...     smaller=b
    ...
    可以直接写为
    >>> smaller=a if a<=b else b 
    
  1-100求和
    
    result = 0
    counter = 1
    while counter <= 100:
        result += counter
        counter += 1
    print(result)
    
   成绩
   score =int(input('输入成绩'))
      if score >= 90:
          print('优秀')
      elif score >= 80:
          print('好')
      elif score >= 70:
          print('中')
      elif score >= 60:
          print('及格')
      else:
          print('不及格')
    
    猜拳
    import random
    win_list=[['石头','剪刀'],['剪刀','布'],['布','石头']]
    cpu=random.choice(['石头','剪刀','布'])
    guess=input('请输入石头,剪刀,布:')
    print('Your choice: %s, CPU choice: %s' % (guess,cpu))
    if guess==cpu:
        print('\033[32;1m平局\033[0m')
    elif [guess,cpu] in win_list:
        print('\033[31;1mYou Win!!\033[0m')
    else:
        print('\033[31;1mYou LOSE\033[0m')
        
   写法二
    import random
    all_chs =['石头','剪刀','布']
    win_list=[['石头','剪刀'],['剪刀','布'],['布','石头']]
    cpu=random.choice(all_chs)
    prompt='''(0)石头
    (1)剪刀
    (2)布
    请输入0/1/2:'''
    ind=int(input(prompt))
    guess=all_chs[ind]
    print('Your choice: %s, CPU choice: %s' % (guess,cpu))
    if guess==cpu:
        print('\033[32;1m平局\033[0m')
    elif [guess,cpu] in win_list:
        print('\033[31;1mYou Win!!\033[0m')
    else:
        print('\033[31;1mYou LOSE\033[0m')
    
    三局俩胜
    import random
    you_win=0
    you_lose=0
    all_chs =['石头','剪刀','布']
    win_list=[['石头','剪刀'],['剪刀','布'],['布','石头']]
    prompt = '''(0)石头
        (1)剪刀
        (2)布
        请输入0/1/2:'''
    while you_win < 2 and you_lose < 2 :
        cpu=random.choice(all_chs)
        ind=int(input(prompt))
        guess=all_chs[ind]
        print('Your choice: %s, CPU choice: %s' % (guess,cpu))
        if guess==cpu:
            print('\033[32;1m平局\033[0m')
        elif [guess,cpu] in win_list:
            print('\033[31;1mYou Win!!\033[0m')
            you_win += 1
            print('人胜 %s 电脑胜 %s' % (you_win,you_lose))
        else:
            print('\033[31;1mYou LOSE\033[0m')
            you_lose += 1
            print('人胜 %s 电脑胜 %s' % (you_win, you_lose))
            
     continue
        result = 0
        counter = 0
        while counter < 100:
            counter += 1
            if counter % 2:
                continue
            result += counter
        print(result)
  
  
import random
num=random.randint(1,10)
counter=0
while counter < 4 :
    result = int(input('guess a number:'))
    if result > num:
        print('big')
    elif result < num:
        print('small')
    else:
        print('ok')        
        break
    counter += 1                
else:                            #循环的else语句,如果循环被break中断,else不执行,否则执行
    print('number is:', num)
